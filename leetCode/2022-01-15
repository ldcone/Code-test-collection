#1 Remove Duplicates from Sorted Array
import java.util.*;
class Solution {
    public int removeDuplicates(int[] nums) {
        HashSet <Integer> duple = new HashSet<Integer>();
        int count=0;
        int a =-2;
        
        for(int i=0; i<nums.length; ++i){
            if(duple.add(nums[i])){
                a= nums[i];
                nums[count] = a;
                count++;
            } 
        }
        return duple.size();
    }
}

#2  Merge Two Sorted Lists
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    ListNode list3;
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode p1 = list1;
        ListNode p2 = list2;
        ListNode head = new ListNode(-1);
        ListNode curr = head;
        
        while(p1 !=null && p2 !=null){
            if(p1.val >p2.val){
                curr.next = p2;
                p2 = p2.next;
            }else if(p1.val <= p2.val){
                curr.next = p1;
                p1 = p1.next;
            }
            curr = curr.next;
        }
        
        if(p1 !=null){
            curr.next =p1;
        }
        if(p2 != null){
            curr.next =p2;
        }
       
        return head.next;
        
    }
}
